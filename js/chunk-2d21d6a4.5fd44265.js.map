{"version":3,"sources":["webpack:///./src/components/ReactiveInterface/index.vue","webpack:///./src/components/ReactiveInterface/Example1.vue","webpack:///./src/components/ReactiveInterface/Example1.vue?533c","webpack:///./src/components/ReactiveInterface/index.vue?01ca"],"names":["class","style","counter","products","id","name","data","price","created","this","qty","mounted","setTimeout","console","log","watch","nval","oval","alert","render","components","Example1","props"],"mappings":"0IACOA,MAAM,I,iFAAX,eAEM,MAFN,EAEM,CADJ,eAAY,K,OCDTA,MAAM,I,EACT,eAIK,UAJD,oLAIJ,G,GAEGC,MAAA,sB,GAGAA,MAAA,sB,gDAVL,eAYM,MAZN,EAYM,CAXJ,EAMA,eAAqD,IAArD,EAA2B,YAAS,eAAG,EAAAC,SAAO,GAC9C,eAAoE,UAA3D,QAAK,+BAAE,EAAAA,YAAWD,MAAA,sBAAwB,YAEnD,eAA6D,IAA7D,EAA2B,gBAAa,eAAG,EAAAE,SAASC,IAAE,GACtD,eAAwE,UAA/D,QAAK,+BAAE,EAAAD,SAASC,OAAMH,MAAA,sBAAwB,cAK5C,OACbI,KAAM,UACNC,KAAM,WACJ,IAAMH,EAAW,CAAEC,GAAI,EAAGC,KAAM,OAAQE,MAAO,SAC/C,MAAO,CACLL,QAAS,EACTC,SAAUA,IAGdK,QAAS,WACPC,KAAKN,SAASO,IAAM,WACbD,KAAKN,SAASI,OAEvBI,QAAS,WAAY,WACnBC,YAAW,WACT,EAAKV,QAAU,KACd,KACHW,QAAQC,IAAIL,KAAKN,WAEnBY,MAAO,CACLb,QAAS,SAAUc,EAAMC,GACvBC,MAAM,2BAA6BD,EAAO,OAASD,EAAO,MAE5D,cAAe,SAAUA,EAAMC,GAC7BC,MAAM,2BAA6BD,EAAO,OAASD,EAAO,QCtChE,EAAOG,OAAS,EAED,QFIA,GACbd,KAAM,QACNe,WAAY,CACVC,YAEFC,MAAO,IGXT,EAAOH,OAASA,EAED","file":"js/chunk-2d21d6a4.5fd44265.js","sourcesContent":["<template>\n  <div class=\"\">\n    <Example1 />\n  </div>\n</template>\n\n<script>\nimport Example1 from \"./Example1.vue\";\n\nexport default {\n  name: \"Index\",\n  components: {\n    Example1,\n  },\n  props: {},\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n","<template>\n  <div class=\"\">\n    <h3>\n      1. VueJS provides options to add reactivity to properties, which are added\n      dynamically. Consider that we have already created vue instance and need\n      to add the watch property.\n    </h3>\n\n    <p style=\"font-size: 25px\">Counter: {{ counter }}</p>\n    <button @click=\"counter++\" style=\"font-size: 25px\">Click Me</button>\n\n    <p style=\"font-size: 25px\">products.id: {{ products.id }}</p>\n    <button @click=\"products.id++\" style=\"font-size: 25px\">Click Me</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Example\",\n  data: () => {\n    const products = { id: 1, name: \"book\", price: \"20.00\" };\n    return {\n      counter: 1,\n      products: products,\n    };\n  },\n  created: function () {\n    this.products.qty = \"1\";\n    delete this.products.price;\n  },\n  mounted: function () {\n    setTimeout(() => {\n      this.counter = 20;\n    }, 2000);\n    console.log(this.products);\n  },\n  watch: {\n    counter: function (nval, oval) {\n      alert(\"Counter is incremented :\" + oval + \" to \" + nval + \"!\");\n    },\n    \"products.id\": function (nval, oval) {\n      alert(\"Counter is incremented :\" + oval + \" to \" + nval + \"!\");\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n","import { render } from \"./Example1.vue?vue&type=template&id=3288fd80\"\nimport script from \"./Example1.vue?vue&type=script&lang=js\"\nexport * from \"./Example1.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./index.vue?vue&type=template&id=349a9300\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}