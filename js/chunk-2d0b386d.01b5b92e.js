(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b386d"],{"296f":function(e,t,n){"use strict";n.r(t);var i=n("7a23"),o={class:""};function c(e,t,n,c,l,a){var m=Object(i["E"])("Example1"),d=Object(i["E"])("Example2");return Object(i["w"])(),Object(i["g"])("div",o,[Object(i["k"])(m),Object(i["k"])(d)])}var l={class:""},a=Object(i["h"])("h3",null,"1. Mixins are basically to be used with components.",-1);function m(e,t,n,o,c,m){return Object(i["w"])(),Object(i["g"])("div",l,[a,Object(i["h"])("div",null,Object(i["I"])(e.title),1),Object(i["h"])("div",null,Object(i["I"])(e.getTitle),1)])}var d={created:function(){this.startmixin()},methods:{startmixin:function(){this.title="Welcome  to mixin example"}},data:function(){return{title:""}},computed:{getTitle:function(){return"Get title: "+this.title}}},r={name:"Example",mixins:[d]};r.render=m;var s=r,h={class:""},u=Object(i["h"])("h3",null," 2. When a mixin and a component contain overlapping options, they are merged as shown in the following example. ",-1);function p(e,t,n,o,c,l){return Object(i["w"])(),Object(i["g"])("div",h,[u,Object(i["h"])("div",null,"Title: "+Object(i["I"])(e.titleComponent),1),Object(i["h"])("div",null,"Mixin Method: "+Object(i["I"])(e.mixinMethod()),1),Object(i["h"])("div",null,"Component Method: "+Object(i["I"])(l.componentMethod()),1)])}var b={created:function(){console.log("mixin called",this),this.titleComponent="mixin called"},methods:{mixinMethod:function(){return"mixinMethod"}}},j={name:"Example",mixins:[b],data:function(){return{titleComponent:"Title Component"}},created:function(){console.log("component called",this),this.titleComponent="component called"},methods:{componentMethod:function(){return"componentMethod"}}};j.render=p;var x=j,O={name:"Index",components:{Example1:s,Example2:x},props:{}};O.render=c;t["default"]=O}}]);
//# sourceMappingURL=chunk-2d0b386d.01b5b92e.js.map